<?php
/**
 * CGenesisAddressInfo
 *
 * PHP version 5
 *
 * @category Class
 * @package  melmccann\cardanoexplorer
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * cardano-explorer-api
 *
 * <p align=\"right\"><img style=\"position: relative; top: -10em; margin-bottom: -12em;\" width=\"20%\" src=\"https://cardanodocs.com/img/cardano.png\"></img></p>
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 4.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace melmccann\cardanoexplorer\Model;

use \ArrayAccess;
use \melmccann\cardanoexplorer\ObjectSerializer;

/**
 * CGenesisAddressInfo Class Doc Comment
 *
 * @category Class
 * @package  melmccann\cardanoexplorer
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class CGenesisAddressInfo implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'CGenesisAddressInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'cgai_cardano_address' => 'string',
        'cgai_genesis_amount' => '\melmccann\cardanoexplorer\Model\InlineResponse200RightCoin',
        'cgai_is_redeemed' => 'bool'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPIFormats = [
        'cgai_cardano_address' => 'base58',
        'cgai_genesis_amount' => null,
        'cgai_is_redeemed' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cgai_cardano_address' => 'cgaiCardanoAddress',
        'cgai_genesis_amount' => 'cgaiGenesisAmount',
        'cgai_is_redeemed' => 'cgaiIsRedeemed'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cgai_cardano_address' => 'setCgaiCardanoAddress',
        'cgai_genesis_amount' => 'setCgaiGenesisAmount',
        'cgai_is_redeemed' => 'setCgaiIsRedeemed'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cgai_cardano_address' => 'getCgaiCardanoAddress',
        'cgai_genesis_amount' => 'getCgaiGenesisAmount',
        'cgai_is_redeemed' => 'getCgaiIsRedeemed'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cgai_cardano_address'] = isset($data['cgai_cardano_address']) ? $data['cgai_cardano_address'] : null;
        $this->container['cgai_genesis_amount'] = isset($data['cgai_genesis_amount']) ? $data['cgai_genesis_amount'] : null;
        $this->container['cgai_is_redeemed'] = isset($data['cgai_is_redeemed']) ? $data['cgai_is_redeemed'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['cgai_cardano_address'] === null) {
            $invalidProperties[] = "'cgai_cardano_address' can't be null";
        }
        if ($this->container['cgai_genesis_amount'] === null) {
            $invalidProperties[] = "'cgai_genesis_amount' can't be null";
        }
        if ($this->container['cgai_is_redeemed'] === null) {
            $invalidProperties[] = "'cgai_is_redeemed' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets cgai_cardano_address
     *
     * @return string
     */
    public function getCgaiCardanoAddress()
    {
        return $this->container['cgai_cardano_address'];
    }

    /**
     * Sets cgai_cardano_address
     *
     * @param string $cgai_cardano_address cgai_cardano_address
     *
     * @return $this
     */
    public function setCgaiCardanoAddress($cgai_cardano_address)
    {
        $this->container['cgai_cardano_address'] = $cgai_cardano_address;

        return $this;
    }

    /**
     * Gets cgai_genesis_amount
     *
     * @return \melmccann\cardanoexplorer\Model\InlineResponse200RightCoin
     */
    public function getCgaiGenesisAmount()
    {
        return $this->container['cgai_genesis_amount'];
    }

    /**
     * Sets cgai_genesis_amount
     *
     * @param \melmccann\cardanoexplorer\Model\InlineResponse200RightCoin $cgai_genesis_amount cgai_genesis_amount
     *
     * @return $this
     */
    public function setCgaiGenesisAmount($cgai_genesis_amount)
    {
        $this->container['cgai_genesis_amount'] = $cgai_genesis_amount;

        return $this;
    }

    /**
     * Gets cgai_is_redeemed
     *
     * @return bool
     */
    public function getCgaiIsRedeemed()
    {
        return $this->container['cgai_is_redeemed'];
    }

    /**
     * Sets cgai_is_redeemed
     *
     * @param bool $cgai_is_redeemed cgai_is_redeemed
     *
     * @return $this
     */
    public function setCgaiIsRedeemed($cgai_is_redeemed)
    {
        $this->container['cgai_is_redeemed'] = $cgai_is_redeemed;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


